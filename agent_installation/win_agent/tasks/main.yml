---
# tasks file for win_agent

- name: Copying Splunk package to target
  win_copy:
    src: Splunk/splunkforwarder-7.3.1-bd63e13aa157-x64-release.msi
    dest: C:\splunkforwarder-7.3.1-bd63e13aa157-x64-release.msi

- name: Installing Splunk
  win_shell: msiexec.exe /i C:\splunkforwarder-7.3.1-bd63e13aa157-x64-release.msi DEPLOYMENT_SERVER=""10.240.17.51:8089"" SET_ADMIN_USER=1 AGREETOLICENSE=Yes REBOOTPROMPT=""S"" MSIRESTARTMANAGERCONTROL=""Disable"" REBOOT=""ReallySuppress"" PROMPTROLLBACKCOST=""D""  /quiet

- name: Copying Tenable package to target
  win_copy:
    src: Tenable/NessusAgent-7.4.2-x64.msi
    dest: C:\NessusAgent-7.4.2-x64.msi

- name: Installing Tenable package
  win_shell: msiexec /i C:\NessusAgent-7.4.2-x64.msi NESSUS_GROUPS="Biogen" NESSUS_SERVER="cloud.tenable.com:443" NESSUS_KEY=ba49db59ceb14e9f5b409eb191000e8cc97cc1beec4bd3cccdb53f55a75a740f /qn ACCEPT=YES SETUP=CUSTOM

- name: Checking whether Splunk is installed or not
  win_shell: Get-WmiObject -Class win32_product -Filter "name='UniversalForwarder'"
#    name: SplunkForwarder
  register: splunk_stat
  ignore_errors: true

- name: Checking whether Tenable is installed or not
  win_shell: Get-WmiObject -Class win32_product -Filter "name='Nessus Agent (x64)'"
  register: tenable_stat
  ignore_errors: true

- name: Wait for installation
  wait_for:
    timeout: 60
    delegate_to: localhost
  when: splunk_stat.rc != 0

- name: Wait for installation
  wait_for:
    timeout: 60
    delegate_to: localhost
  when: tenable_stat.rc != 0 
  
- debug:
    msg: "Tenable Agent is not installed"
  when: tenable_stat.rc != 0

- debug:
    msg: "Splunk Agent is not installed"
  when: splunk_stat.rc != 0

- debug:
    msg: "Tenable Agent is successfully installed"
  when: tenable_stat.rc == 0

- debug:
    msg: "Splunk Agent is successfully installed"
  when: splunk_stat.rc == 0

- name: Checking whether Snare exists
  win_shell: Get-WmiObject -Class win32_product -Filter "name='Snare Enterprise Windows agent v5.0.2'"
  register: snare
  ignore_errors: true

- name: Uninstalling Snare Agent
  win_shell: (Get-WmiObject -Class win32_product -Filter "name='Snare Enterprise Windows agent v5.0.2'" -ComputerName . ).Uninstall()
  failed_when: false
  when: snare.rc == 0

- name: Checking whether Qualys path exists
  win_stat:
    path: C:\Program Files (x86)\Qualys\QualysAgent\Uninstall.exe
  register: qualys1
  ignore_errors: true

- name: Uninstalling Qualys Agent
  win_shell: '"%programfiles(x86)%\qualys\qualysagent\uninstall.exe" Uninstall=True Force=True'
  failed_when: false
  when: qualys1.stat.exists

- name: Getting status of Qualys
  win_service:
    name: QualysAgent
  register: qualys

- name: Getting status of Qualys
  win_service:
    name: QualysAgent
  register: qualys

- name: Uninstalling Qualys Agent
  win_service:
    name: QualysAgent
    state: absent
  failed_when: false
  when: qualys.exists == True

- name: Checking whether Splunk is installed or not
  win_command: splunk.exe status
  args:
    chdir: C:\Program Files\SplunkUniversalForwarder\bin\
  register: splunk_status
  ignore_errors: true

- debug: var=splunk_status.stdout_lines

- name: Checking whether Tenable is installed or not
  win_command: nessuscli agent status
  args:
    chdir: C:\Program Files\Tenable\Nessus Agent\
  register: nessus_status
  ignore_errors: true

- name: Remove Splunk msi
  win_file:
    path: C:\splunkforwarder-7.3.1-bd63e13aa157-x64-release.msi
    state: absent

- name: Remove Tenable msi
  win_file:
    path: C:\NessusAgent-7.4.2-x64.msi
    state: absent

- name: hostanme
  win_command: hostname
  register: host_name

- name: hostanme
  win_shell: Get-NetTCPConnection -LocalPort 8089
  register: port
  ignore_errors: true

- debug: var=port

- debug: var=nessus_status.stdout_lines[0]

- name: Creating CSV
  file:
    path: '/home/schopra1/installation_report.csv'
    state: touch
  become: true
  delegate_to: localhost
  changed_when: True
  run_once: True

- name: Setting heading for CSV
  lineinfile:
    path: '/home/schopra1/installation_report.csv'
    line: 'IP_ADDRESS,HOSTNAME,O.S.,AGENT,VERSION,INSTALLATION_STATUS,CONNECTION_TO_MGMT_SERVER,PORT,DATE,TIME'
    regexp: "^IP_ADDRESS"
  become: true
  delegate_to: localhost
  changed_when: True
  run_once: True

- name: entry for CSV
  lineinfile:
    path: '/home/schopra1/installation_report.csv'
    line: "{{ ansible_facts.ip_addresses[0] }},{{ host_name.stdout_lines[0] }},{{ ansible_distribution }},Splunk,7.3.1,Successful,{{ splunk_status.stdout_lines[0] }},Listening to Port 8089,{{ ansible_date_time.date }},{{ ansible_date_time.time }}"
  when: splunk_status.rc == 0 and port.rc == 0
  become: true
  delegate_to: localhost

- name: entry for CSV
  lineinfile:
    path: '/home/schopra1/installation_report.csv'
    line: "{{ ansible_facts.ip_addresses[0] }},{{ host_name.stdout_lines[0] }},{{ ansible_distribution }},Tenable,7.4.2,Successful,{{ nessus_status.stdout_lines[0] }},NA,{{ ansible_date_time.date }},{{ ansible_date_time.time }}"
  when: nessus_status.rc == 0
  become: true
  delegate_to: localhost

- name: entry for CSV
  lineinfile:
    path: '/home/schopra1/installation_report.csv'
    line: "{{ ansible_facts.ip_addresses[0] }},{{ host_name.stdout_lines[0] }},{{ ansible_distribution }},Tenable,None,Not Installed,Agent not linked,NA,{{ ansible_date_time.date }},{{ ansible_date_time.time }}"
  when: nessus_status.rc != 0 or tenable_stat.rc != 0
  delegate_to: localhost

- name: entry for CSV
  lineinfile:
    path: '/home/schopra1/installation_report.csv'
    line: "{{ ansible_facts.ip_addresses[0] }},{{ host_name.stdout_lines[0] }},{{ ansible_distribution }},Splunk,None,Not Installed,Agent not linked,NA,{{ ansible_date_time.date }},{{ ansible_date_time.time }}"
  when: splunk_status.rc != 0 or splunk_stat.rc != 0
  delegate_to: localhost
