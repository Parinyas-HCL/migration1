---
# tasks file for linux_agent
#- name: Creating CSV
#  copy:
#    dest: '/home/schopra1/splunk_status/splunk_status.csv'
#    content: 'IP_ADDRESS,O.S.,SPLUNK_STATUS,CONNECTION_TO_MGMT_SERVER'
#  delegate_to: localhost
#  changed_when: True
#  run_once: True

#- name: Creating CSV
#  copy:
#    dest: '/home/schopra1/splunk_status/tenable_status.csv'
#    content: 'IP_ADDRESS,O.S.,TENABLE_STATUS,CONNECTION_TO_MGMT_SERVER'
#  delegate_to: localhost
#  changed_when: True
#  run_once: True

#- name: Creating CSV
#  copy:
#    dest: '/home/schopra1/splunk_status/crowdstrike_status.csv'
#    content: 'IP_ADDRESS,O.S.,CROWDSTRIKE_STATUS,CONNECTION_TO_MGMT_SERVER'
#  delegate_to: localhost
#  changed_when: True
#  run_once: True

- stat:
    path: /opt/splunkforwarder/bin
#    timeout: 5
  register: output

- name: Start Splunk Service
  shell: |
    /opt/splunkforwarder/bin/splunk enable boot-start -user splunk
    /opt/splunkforwarder/bin/splunk restart
  become: yes
  become_method: sudo
  ignore_errors: true
  when: output.stat.exists == true

- name: Checking status
  shell: |
    cd /opt/splunkforwarder/bin/
    ./splunk status
  register: status1
  become: yes
  become_method: sudo
  ignore_errors: true
  when: output.stat.exists == true

- name: Checking if Teanable Agent is installed or not
  shell: "rpm -qa | grep -i nessusagent"
  register: tenable_stat
  become: true
  ignore_errors: true

- name: Checking status
  shell: /opt/nessus_agent/sbin/nessuscli agent status
  register: tenable_status
  ignore_errors: true
  when: tenable_stat.rc == 0

- name: Checking Falcon-Sensor service
  shell: rpm -qa | grep -i falcon-sensor
  failed_when: false
  register: crowdstrike_status

- name: entry for CSV
  lineinfile:
    path: '/home/schopra1/splunk_status/splunk_status.csv'
    line: "{{ ansible_default_ipv4.address }},{{ ansible_distribution }},Installed and Linked, {{ status1.stdout_lines }}"
  when: output.stat.exists == true and status1.rc == 0
  delegate_to: localhost

- name: entry for CSV
  lineinfile:
    path: '/home/schopra1/splunk_status/splunk_status.csv'
    line: "{{ ansible_default_ipv4.address }},{{ ansible_distribution }},Installed but not linked,{{ status1.stdout_lines }}"
  when: output.stat.exists == true and status1.rc != 0
  delegate_to: localhost

- name: entry for CSV
  lineinfile:
    path: '/home/schopra1/splunk_status/splunk_status.csv'
    line: "{{ ansible_default_ipv4.address }},{{ ansible_distribution }},Not Installed,NA"
  when: output.stat.exists == false
  delegate_to: localhost

- name: entry for CSV
  lineinfile:
    path: '/home/schopra1/splunk_status/tenable_status.csv'
    line: "{{ ansible_default_ipv4.address }},{{ ansible_distribution }},Installed and Linked, {{ tenable_status.stdout_lines[0] }}"
  when: tenable_stat.rc == 0 and tenable_status.rc == 0
  delegate_to: localhost

- name: entry for CSV
  lineinfile:
    path: '/home/schopra1/splunk_status/tenable_status.csv'
    line: "{{ ansible_default_ipv4.address }},{{ ansible_distribution }},Installed but not linked,{{ tenable_status.stdout_lines }}"
  when: tenable_stat.rc == 0 and tenable_status.rc != 0
  delegate_to: localhost

- name: entry for CSV
  lineinfile:
    path: '/home/schopra1/splunk_status/tenable_status.csv'
    line: "{{ ansible_default_ipv4.address }},{{ ansible_distribution }},Not Installed,NA"
  when: tenable_stat.rc != 0
  delegate_to: localhost

- name: entry for CSV
  lineinfile:
    path: '/home/schopra1/splunk_status/crowdstrike_status.csv'
    line: "{{ ansible_default_ipv4.address }},{{ ansible_distribution }},Installed and Linked, {{ crowdstrike_status.stdout_lines[0] }}"
  when: crowdstrike_status.rc == 0 
  delegate_to: localhost

- name: entry for CSV
  lineinfile:
    path: '/home/schopra1/splunk_status/crowdstrike_status.csv'
    line: "{{ ansible_default_ipv4.address }},{{ ansible_distribution }},Not Installed,NA"
  when: crowdstrike_status.rc != 0
  delegate_to: localhost
